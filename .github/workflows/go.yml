name: 使用scp-action部署应用

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: 设置Go环境
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: false

      - name: 编译Go应用
        run: |
          GOOS=linux GOARCH=amd64 go build -o myapp main.go
          chmod +x myapp
          # 验证编译结果
          if [ ! -f "myapp" ]; then
            echo "编译失败：未生成myapp文件"
            exit 1
          fi
          ls -l myapp

      - name: 停止服务器上的旧服务
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.TEST_SERVER_HOST }}
          username: ${{ secrets.TEST_SERVER_USER }}
          key: ${{ secrets.TEST_SERVER_SSH_KEY }}
          port: ${{ secrets.TEST_SERVER_PORT || 22 }}
          script: |
            TARGET_DIR="/home/testapp"
            mkdir -p $TARGET_DIR
            # 停止旧服务
            pkill -f "$TARGET_DIR/myapp" || true
            sleep 1

      - name: 使用scp-action传输文件到服务器
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.TEST_SERVER_HOST }}
          username: ${{ secrets.TEST_SERVER_USER }}
          key: ${{ secrets.TEST_SERVER_SSH_KEY }}
          port: ${{ secrets.TEST_SERVER_PORT || 22 }}
          # 本地文件路径（编译好的myapp）
          source: "myapp"
          # 服务器目标路径（确保目录存在）
          target: "/home/testapp"
          # 传输后设置文件权限（可选）
          strip_components: 0  # 保持文件名不变
          rm: true  # 传输前删除服务器上的旧文件

      - name: 启动服务器上的新服务
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.TEST_SERVER_HOST }}
          username: ${{ secrets.TEST_SERVER_USER }}
          key: ${{ secrets.TEST_SERVER_SSH_KEY }}
          port: ${{ secrets.TEST_SERVER_PORT || 22 }}
          script: |
            TARGET_DIR="/home/testapp"
            # 确保文件可执行
            chmod +x $TARGET_DIR/myapp
            # 启动服务并记录日志
            nohup $TARGET_DIR/myapp > $TARGET_DIR/app.log 2>&1 &
            # 验证启动结果
            sleep 2
            if pgrep -f "$TARGET_DIR/myapp"; then
              echo "新服务启动成功"
            else
              echo "启动失败，日志："
              cat $TARGET_DIR/app.log
              exit 1
            fi

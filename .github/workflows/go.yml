name: 编译并部署到测试服务器

# 触发条件：只有main分支有push操作时才执行
on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    # 在Ubuntu系统上运行
    runs-on: ubuntu-latest
    
    steps:
      # 步骤1：拉取代码到工作流环境
      - name: 拉取代码
        uses: actions/checkout@v4

      # 步骤2：配置Go环境
      - name: 设置Go环境
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'  # 指定Go版本
          cache: true         # 缓存依赖，加速构建

      # 步骤3：编译Go程序
      - name: 编译程序
        run: |
          # 编译为Linux可执行文件（假设测试服务器是Linux系统）
          GOOS=linux GOARCH=amd64 go build -o myapp main.go
          # 检查编译结果
          ls -l myapp

      # 步骤4：部署到测试服务器
      - name: 部署到测试服务器
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.TEST_SERVER_HOST }}     # 测试服务器IP/域名
          username: ${{ secrets.TEST_SERVER_USER }} # 服务器登录用户名
          key: ${{ secrets.TEST_SERVER_SSH_KEY }}   # SSH私钥
          port: ${{ secrets.TEST_SERVER_PORT || 22 }} # 服务器SSH端口，默认22
          script: |
            # 进入服务器上的应用目录（根据实际情况修改）
            cd /home/testapp
            
            # 停止当前运行的程序（如果需要）
            pkill myapp || true
            
            # 备份旧版本（可选）
            mv myapp myapp_old || true
            
            # 从工作流环境复制新编译的程序到服务器
            echo "正在部署新版本..."
          # 传输编译好的文件到服务器
          source: myapp
          target: /home/testapp  # 服务器上的目标目录
